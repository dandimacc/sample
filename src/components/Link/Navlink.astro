---
// /src/components/navlink.astro
import type { Props } from "@utils/navigation";

// Type definition for the props expected by navlink.astro
interface NavLinkProps {
  name: string;
  url: string;
  subLinks?: Props[];
}

const { name, url, subLinks } = Astro.props as NavLinkProps;

// Check if subLinks exist and split the array safely
let firstHalf: Props[] = [];
let secondHalf: Props[] = [];

if (subLinks && subLinks.length > 0) {
  const mid = Math.ceil(subLinks.length / 3);
  firstHalf = subLinks.slice(0, mid);
  secondHalf = subLinks.slice(mid);
}
---

<div class="hs-dropdown [--strategy:static] lg:[--trigger:hover] md:[--strategy:fixed] [--adaptive:none] [--is-collapse:true] md:[--is-collapse:false]">
  <button
    id="hs-dropdown-hover-event"
    type="button"
    aria-label="Menu"
    class="hs-dropdown-toggle inline-flex items-center gap-x-2 rounded-lg px-1.5 py-1.5 text-sm font-medium text-neutral-600 outline-none ring-zinc-500 transition duration-300 hover:bg-neutral-100 hover:text-orange-400 dark:border-neutral-700 dark:text-neutral-400 dark:ring-zinc-200 dark:hover:bg-neutral-700 dark:hover:text-orange-300 dark:focus:outline-none"
  >
    <a class="font-extrabold text-xl text-indigo"
    >
      {name}
    </a>
    <svg
      class="size-4 hs-dropdown-open:rotate-180"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path d="m6 9 6 6 6-6"></path>
    </svg>
  </button>


{subLinks && (
  <div class="hs-dropdown-menu transition-[opacity,margin] duration-[0.1ms] md:duration-[150ms] hs-dropdown-open:opacity-100 opacity-0 relative w-full min-w-60 hidden z-10 top-full start-0 before:absolute before:-top-5 before:start-0 before:w-full before:h-5" role="menu" aria-orientation="vertical" aria-labelledby="hs-header-base-mega-menu-fullwidth">
    <div class="md:mx-6 lg:mx-8 md:bg-white md:rounded-lg md:shadow-md dark:md:bg-neutral-800">
      <!-- Grid -->
      <div class="py-1 md:p-2 md:grid md:grid-cols-2 lg:grid-col gap-4">
        <div class="flex flex-col md:flex-row">
          <!-- First Column -->
          <div class="flex flex-col w-full md:w-1/2">
            {firstHalf.map((subLink) => (
              <a
                href={subLink.url}
                class="p-3 flex gap-x-4 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 rounded-lg dark:text-neutral-200 dark:hover:bg-neutral-700 dark:focus:bg-neutral-700"
              >
                <div class="grow">
                  <p class="font-medium text-sm text-gray-800 dark:text-neutral-200 hover:underline hover:text-orange-400">
                    {subLink.name}
                  </p>
                  <p class="text-sm text-gray-500 dark:text-neutral-500">
                    Explore advice and explanations for all of Preline's features.
                  </p>
                </div>
              </a>
            ))}
          </div>

          <!-- Second Column -->
          <div class="flex flex-col w-full md:w-1/2">
            {secondHalf.map((subLink) => (
              <a
                href={subLink.url}
                class="p-3 flex gap-x-4 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 rounded-lg dark:text-neutral-200 dark:hover:bg-neutral-700 dark:focus:bg-neutral-700"
              >
                <div class="grow">
                  <p class="font-medium text-sm text-gray-800 dark:text-neutral-200 hover:underline hover:text-orange-400">
                    {subLink.name}
                  </p>
                  <p class="text-sm text-gray-500 dark:text-neutral-500">
                    Explore advice and explanations for all of Preline's features.
                  </p>
                </div>
              </a>
            ))}
          </div>
        </div>
<div class="mt-2 md:mt-0 flex flex-col">
  <span class="ms-2.5 mb-2 font-semibold text-xs uppercase text-gray-800 dark:text-neutral-200">Customer stories</span>
  <!-- Link -->
  <a class="p-3 flex gap-x-5 items-center rounded-xl hover:bg-gray-100 focus:outline-none focus:bg-gray-100 dark:hover:bg-neutral-700 dark:focus:bg-neutral-700" href="#" target="_parent">
    <img class="size-32 rounded-lg" src="https://images.unsplash.com/photo-1648737967328-690548aec14f?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=320&amp;h=320&amp;q=80" alt="Avatar">
    <div class="grow">
      <p class="text-sm text-gray-800 dark:text-neutral-400"> Preline Projects has proved to be most efficient cloud based project tracking and bug tracking tool. </p>
      <p class="mt-3 inline-flex items-center gap-x-1 text-sm text-blue-600 decoration-2 group-hover:underline group-focus:underline font-medium dark:text-blue-400"> Learn more <svg class="shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="m9 18 6-6-6-6"></path>
        </svg>
      </p>
    </div>
  </a>
  <!-- End Link -->
</div>
      </div>
    </div>
  </div>
)}

<script>
  import "@preline/dropdown/index.js";
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const url = window.location.pathname;
    const navId = url === "/" ? "home" : url.split("/")[1];

    // Highlight the active link
    const nav = document.getElementById(navId);
    if (nav) {
      nav.classList.remove(
        "text-neutral-600",
        "dark:text-neutral-400",
        "hover:text-neutral-500",
        "dark:hover:text-neutral-500"
      );
      nav.classList.add("text-orange-400", "dark:text-orange-300");
      nav.setAttribute("aria-current", "page");
    }
  });
</script>
